<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtxk.cn.third.mapper.BuildingInfoMapper" >
  <resultMap id="BaseResultMap" type="com.xtxk.cn.third.entity.build.BuildingInfo" >
    <id column="building_id" property="buildingId" jdbcType="INTEGER" />
    <result column="building_number" property="buildingNumber" jdbcType="VARCHAR" />
    <result column="building_name" property="buildingName" jdbcType="VARCHAR" />
    <result column="building_manager_name" property="buildingManagerName" jdbcType="VARCHAR" />
    <result column="building_manager_phone" property="buildingManagerPhone" jdbcType="VARCHAR" />
    <result column="district" property="district" jdbcType="VARCHAR" />
    <result column="building_type" property="buildingType" jdbcType="VARCHAR" />
    <result column="building_door_count" property="buildingDoorCount" jdbcType="INTEGER" />
    <result column="building_person_count" property="buildingPersonCount" jdbcType="INTEGER" />
    <result column="building_floor_count" property="buildingFloorCount" jdbcType="INTEGER" />
    <result column="floor_space" property="floorSpace" jdbcType="DOUBLE" />
    <result column="building_longitude" property="buildingLongitude" jdbcType="VARCHAR" />
    <result column="building_latitude" property="buildingLatitude" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="building_height" property="buildingHeight" jdbcType="VARCHAR" />
    <result column="lake_building_id" property="lakeBuildingId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    building_id, building_number,building_name, building_manager_name, building_manager_phone, district,
    building_type, building_door_count, building_person_count, building_floor_count, 
    floor_space, building_longitude, building_latitude, address, create_time, update_time, 
    building_height, lake_building_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from building_info
    where building_id = #{buildingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from building_info
    where building_id = #{buildingId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xtxk.cn.third.entity.build.BuildingInfo" >
    insert into building_info (
      building_id, building_number,building_name, building_manager_name,
      building_manager_phone, district, building_type, 
      building_door_count, building_person_count, 
      building_floor_count, floor_space, building_longitude, 
      building_latitude, address, create_time, 
      update_time, building_height, lake_building_id)
    values (#{buildingId,jdbcType=INTEGER}, #{buildingNumber,jdbcType=VARCHAR},#{buildingName,jdbcType=VARCHAR}, #{buildingManagerName,jdbcType=VARCHAR},
      #{buildingManagerPhone,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{buildingType,jdbcType=VARCHAR}, 
      #{buildingDoorCount,jdbcType=INTEGER}, #{buildingPersonCount,jdbcType=INTEGER}, 
      #{buildingFloorCount,jdbcType=INTEGER}, #{floorSpace,jdbcType=DOUBLE}, #{buildingLongitude,jdbcType=VARCHAR},
      #{buildingLatitude,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{buildingHeight,jdbcType=VARCHAR}, #{lakeBuildingId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xtxk.cn.third.entity.build.BuildingInfo" >
    insert into building_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="buildingNumber != null" >
        building_number,
      </if>
      <if test="buildingName != null" >
        building_name,
      </if>
      <if test="buildingManagerName != null" >
        building_manager_name,
      </if>
      <if test="buildingManagerPhone != null" >
        building_manager_phone,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="buildingType != null" >
        building_type,
      </if>
      <if test="buildingDoorCount != null" >
        building_door_count,
      </if>
      <if test="buildingPersonCount != null" >
        building_person_count,
      </if>
      <if test="buildingFloorCount != null" >
        building_floor_count,
      </if>
      <if test="floorSpace != null" >
        floor_space,
      </if>
      <if test="buildingLongitude != null" >
        building_longitude,
      </if>
      <if test="buildingLatitude != null" >
        building_latitude,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="buildingHeight != null" >
        building_height,
      </if>
      <if test="lakeBuildingId != null" >
        lake_building_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="buildingNumber != null" >
        #{buildingNumber,jdbcType=VARCHAR},
      </if>
      <if test="buildingName != null" >
        #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingManagerName != null" >
        #{buildingManagerName,jdbcType=VARCHAR},
      </if>
      <if test="buildingManagerPhone != null" >
        #{buildingManagerPhone,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="buildingType != null" >
        #{buildingType,jdbcType=VARCHAR},
      </if>
      <if test="buildingDoorCount != null" >
        #{buildingDoorCount,jdbcType=INTEGER},
      </if>
      <if test="buildingPersonCount != null" >
        #{buildingPersonCount,jdbcType=INTEGER},
      </if>
      <if test="buildingFloorCount != null" >
        #{buildingFloorCount,jdbcType=INTEGER},
      </if>
      <if test="floorSpace != null" >
        #{floorSpace,jdbcType=INTEGER},
      </if>
      <if test="buildingLongitude != null" >
        #{buildingLongitude,jdbcType=VARCHAR},
      </if>
      <if test="buildingLatitude != null" >
        #{buildingLatitude,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildingHeight != null" >
        #{buildingHeight,jdbcType=VARCHAR},
      </if>
      <if test="lakeBuildingId != null" >
        #{lakeBuildingId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xtxk.cn.third.entity.build.BuildingInfo" >
    update building_info
    <set >
      <if test="buildingName != null" >
        building_name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingNumber != null" >
        building_number = #{buildingNumber,jdbcType=VARCHAR},
      </if>
      <if test="buildingManagerName != null" >
        building_manager_name = #{buildingManagerName,jdbcType=VARCHAR},
      </if>
      <if test="buildingManagerPhone != null" >
        building_manager_phone = #{buildingManagerPhone,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="buildingType != null" >
        building_type = #{buildingType,jdbcType=VARCHAR},
      </if>
      <if test="buildingDoorCount != null" >
        building_door_count = #{buildingDoorCount,jdbcType=INTEGER},
      </if>
      <if test="buildingPersonCount != null" >
        building_person_count = #{buildingPersonCount,jdbcType=INTEGER},
      </if>
      <if test="buildingFloorCount != null" >
        building_floor_count = #{buildingFloorCount,jdbcType=INTEGER},
      </if>
      <if test="floorSpace != null" >
        floor_space = #{floorSpace,jdbcType=DOUBLE},
      </if>
      <if test="buildingLongitude != null" >
        building_longitude = #{buildingLongitude,jdbcType=VARCHAR},
      </if>
      <if test="buildingLatitude != null" >
        building_latitude = #{buildingLatitude,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildingHeight != null" >
        building_height = #{buildingHeight,jdbcType=VARCHAR},
      </if>
      <if test="lakeBuildingId != null" >
        lake_building_id = #{lakeBuildingId,jdbcType=VARCHAR},
      </if>
    </set>
    where building_id = #{buildingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtxk.cn.third.entity.build.BuildingInfo" >
    update building_info
    set
      building_name = #{buildingName,jdbcType=VARCHAR},
      building_number = #{buildingNumber,jdbcType=VARCHAR},
      building_manager_name = #{buildingManagerName,jdbcType=VARCHAR},
      building_manager_phone = #{buildingManagerPhone,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      building_type = #{buildingType,jdbcType=VARCHAR},
      building_door_count = #{buildingDoorCount,jdbcType=INTEGER},
      building_person_count = #{buildingPersonCount,jdbcType=INTEGER},
      building_floor_count = #{buildingFloorCount,jdbcType=INTEGER},
      floor_space = #{floorSpace,jdbcType=DOUBLE},
      building_longitude = #{buildingLongitude,jdbcType=VARCHAR},
      building_latitude = #{buildingLatitude,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      building_height = #{buildingHeight,jdbcType=VARCHAR},
      lake_building_id = #{lakeBuildingId,jdbcType=VARCHAR}
    where building_id = #{buildingId,jdbcType=INTEGER}
  </update>

  <select id="selectList" resultType="com.xtxk.cn.third.entity.build.BuildingInfo">
    select
       building_type        buildingType,
       building_name        buildingName,
       building_number      buildingNumber,
       district             district,
       floor_space          floorSpace,
       building_door_count  buildingDoorCount,
       building_floor_count buildingFloorCount,
       lake_building_id     lakeBuildingId
    from building_info
  </select>

  <insert id="insertBatchSave" parameterType="list">
    insert into building_info
        (building_number, building_name, district, building_type, building_floor_count,
        floor_space, create_time, update_time, lake_building_id)
    values
    <foreach collection="list" separator="," item="item">
      (#{item.buildingNumber,jdbcType=VARCHAR}, #{item.buildingName,jdbcType=VARCHAR}, #{item.district,jdbcType=VARCHAR},
      #{item.buildingType,jdbcType=VARCHAR}, #{item.buildingFloorCount,jdbcType=INTEGER}, #{item.floorSpace,jdbcType=DOUBLE},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.lakeBuildingId,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <update id="updateBatchSave" parameterType="list">
    <foreach collection="list" item="item" separator=";">
      update building_info
      set
        building_name = #{item.buildingName,jdbcType=VARCHAR},
        building_number = #{item.buildingNumber,jdbcType=VARCHAR},
        district = #{item.district,jdbcType=VARCHAR},
        building_type = #{item.buildingType,jdbcType=VARCHAR},
        building_door_count = #{item.buildingDoorCount,jdbcType=INTEGER},
        building_person_count = #{item.buildingPersonCount,jdbcType=INTEGER},
        building_floor_count = #{item.buildingFloorCount,jdbcType=INTEGER},
        floor_space = #{item.floorSpace,jdbcType=DOUBLE},
        update_time = #{item.updateTime,jdbcType=TIMESTAMP},
        building_height = #{item.buildingHeight,jdbcType=VARCHAR},
        lake_building_id = #{item.lakeBuildingId,jdbcType=VARCHAR}
      where building_id = #{item.buildingId,jdbcType=INTEGER}
    </foreach>
  </update>

  <delete id="deleteBatchSave" parameterType="list">
    delete from building_info
    where building_id in
    <foreach collection="list" separator="," item="item" index="index" open="(" close=")">
      #{item}
    </foreach>
  </delete>

  <select id="selectByLakeBuild" resultType="com.xtxk.cn.third.entity.build.BuildingInfo">
    select
      building_id buildingId,
      building_name buildingName,
      building_type buildingType,
      lake_building_id lakeBuildingId
    from building_info
  </select>

</mapper>