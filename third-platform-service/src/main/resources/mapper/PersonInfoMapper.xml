<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtxk.cn.third.mapper.PersonInfoMapper">
    <resultMap id="BaseResultMap" type="com.xtxk.cn.third.entity.user.PersonInfo">
        <id column="person_id" property="personId" jdbcType="INTEGER"/>
        <result column="person_name" property="personName" jdbcType="VARCHAR"/>
        <result column="person_photo" property="personPhoto" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="VARCHAR"/>
        <result column="birth" property="birth" jdbcType="DATE"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="id_number" property="idNumber" jdbcType="VARCHAR"/>
        <result column="person_type" property="personType" jdbcType="VARCHAR"/>
        <result column="district" property="district" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="lake_person_id" property="lakePersonId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        person_id, person_name, person_photo, gender, birth, phone, id_number, person_type,
        district, address, create_time, update_time, lake_person_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from person_info
        where person_id = #{personId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from person_info
        where person_id = #{personId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.xtxk.cn.third.entity.user.PersonInfo">
        insert into person_info (person_id, person_name, person_photo,
                                 gender, birth, phone,id_number, person_type, district,
                                 address, create_time, update_time,lake_person_id)
        values (#{personId,jdbcType=INTEGER}, #{personName,jdbcType=VARCHAR}, #{personPhoto,jdbcType=VARCHAR},
                #{gender,jdbcType=VARCHAR}, #{birth,jdbcType=DATE}, #{phone,jdbcType=VARCHAR},
                #{idNumber,jdbcType=VARCHAR}, #{personType,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
                #{lakePersonId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xtxk.cn.third.entity.user.PersonInfo">
        insert into person_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="personId != null">
                person_id,
            </if>
            <if test="personName != null">
                person_name,
            </if>
            <if test="personPhoto != null">
                person_photo,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="idNumber != null">
                id_number,
            </if>
            <if test="personType != null">
                person_type,
            </if>
            <if test="district != null">
                district,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="lakePersonId != null">
                lake_person_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="personId != null">
                #{personId,jdbcType=INTEGER},
            </if>
            <if test="personName != null">
                #{personName,jdbcType=VARCHAR},
            </if>
            <if test="personPhoto != null">
                #{personPhoto,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                #{birth,jdbcType=DATE},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idNumber != null">
                #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="personType != null">
                #{personType,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                #{district,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lakePersonId != null">
                #{lakePersonId},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xtxk.cn.third.entity.user.PersonInfo">
        update person_info
        <set>
            <if test="personName != null">
                person_name = #{personName,jdbcType=VARCHAR},
            </if>
            <if test="personPhoto != null">
                person_photo = #{personPhoto,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=DATE},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="idNumber != null">
                id_number = #{idNumber,jdbcType=VARCHAR},
            </if>
            <if test="personType != null">
                person_type = #{personType,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                district = #{district,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lakePersonId != null">
                lake_person_id = #{lakePersonId,jdbcType=VARCHAR},
            </if>
        </set>
        where person_id = #{personId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xtxk.cn.third.entity.user.PersonInfo">
        update person_info
        set person_name    = #{personName,jdbcType=VARCHAR},
            person_photo   = #{personPhoto,jdbcType=VARCHAR},
            gender         = #{gender,jdbcType=VARCHAR},
            birth          = #{birth,jdbcType=DATE},
            phone          = #{phone,jdbcType=VARCHAR},
            id_number      = #{idNumber,jdbcType=VARCHAR},
            person_type    = #{personType,jdbcType=VARCHAR},
            district       = #{district,jdbcType=VARCHAR},
            address        = #{address,jdbcType=VARCHAR},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP},
            lake_person_id = #{lakePersonId,jdbcType=VARCHAR}
        where person_id = #{personId,jdbcType=INTEGER}
    </update>

    <select id="selectList" resultMap="BaseResultMap">
        select
          person_id,person_name,person_photo,gender,
          birth,phone,id_number,address,lake_person_id
        from person_info
    </select>


    <insert id="insertBatchSave" parameterType="list">
        insert into person_info (person_name,gender, birth, id_number,create_time, update_time,lake_person_id)
        values
        <foreach collection="list" separator="," item="item">
            (#{item.personName,jdbcType=VARCHAR},#{item.gender,jdbcType=VARCHAR}, #{item.birth,jdbcType=DATE},
            #{item.idNumber,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.lakePersonId,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateBatchSave" parameterType="list">
        <foreach collection="list" item="item" separator=";">
            update person_info
            set person_name    = #{item.personName,jdbcType=VARCHAR},
            gender         = #{item.gender,jdbcType=VARCHAR},
            birth          = #{item.birth,jdbcType=DATE},
            id_number      = #{item.idNumber,jdbcType=VARCHAR},
            person_type    = #{item.personType,jdbcType=VARCHAR},
            district       = #{item.district,jdbcType=VARCHAR},
            address        = #{item.address,jdbcType=VARCHAR},
            update_time    = #{item.updateTime,jdbcType=TIMESTAMP},
            lake_person_id = #{item.lakePersonId,jdbcType=VARCHAR}
            where person_id = #{item.personId,jdbcType=INTEGER}
        </foreach>
    </update>

    <delete id="deleteBatchSave" parameterType="list">
        delete
        from person_info
        where person_id in
        <foreach collection="list" separator="," item="item" open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="streamQueryList" resultMap="BaseResultMap" fetchSize="5000">
        select
            person_id,person_name,person_photo,gender,
            birth,phone,id_number,address,lake_person_id
        from person_info
    </select>

</mapper>